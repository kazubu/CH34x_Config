name: Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  App_Name: CH340x_Config
  Solution_Path: CH34x_Config.sln
  App_Project_Path: CH34x_Config/CH34x_Config.csproj

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest
    timeout-minutes: 5
    
    steps:
    # Dump for debug workflow
    - name: Dump Github Context
      env:
        GitHub_Context: ${{ toJson(github) }}
      run: echo "${GitHub_Context}"
      
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2
      
    # Restore before build and test
    - name: Restore
      run: dotnet restore ${{ env.Solution_Path }}

    - name: Build with dotnet
      run: dotnet build ${{ env.App_Project_Path }} --no-restore
      env:
        Configuration: ${{ matrix.configuration }}

  
  create-release:
    runs-on: windows-latest
    timeout-minutes: 5
    needs: [build]
    
    steps:
      - name: Get bash
        shell: bash
        run: |
          echo "hash=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
          
      - name: Set env
        shell: bash
        run: |
          echo "app_name=${{ env.App_Name }}_win-x86_${{ env.hash }}" >> $GITHUB_ENV

      # Checks-out repository under $GITHUB_WORKSPACE: https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # don't output pdb -> /p:DebugType=None /p:DebugSymbols=false
      - name: dotnet publish x86 Framework-dependent
        run: >
          dotnet publish ${{ env.App_Project_Path }}
          -c Release
          -r win-x86
          --self-contained false
          -p:UseAppHost=true
          -p:PublishSingleFile=true
          -p:PublishReadyToRun=false
          -p:PublishTrimmed=false
          -p:IncludeNativeLibrariesForSelfExtract=false
          -p:DebugType=none
          -p:DebugSymbols=false
          -o outputs\${{ env.app_name }}

      # Upload Actions Artifacts: https://github.com/actions/upload-artifact
      - name: Archive publish files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.App_Name }}
          path: outputs
